(fact 1)
((Y fact_) 1)
(((fn [f] ((fn [x] (x x)) (fn [x] (f (x x))))) fact_) 1)
(((fn [x] (x x)) (fn [x] (fact_ (x x)))) 1)
(((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) 1)
((fact_ ((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x))))) 1)
(((fn [f n] ((zero? n) 1 (* n (f (pred n))))) ((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x))))) 1)
(((fn [f n] ((zero? n) 1 (* n (f (pred n))))) (Y fact_)) 1)
((fn [n] ((zero? n) 1 (* n ((Y fact_) (pred n))))) 1)
((zero? 1) 1 (* 1 ((Y fact_) (pred 1))))
(((fn [n] (n (K false) true)) 1) 1 (* 1 ((Y fact_) (pred 1))))
((1 (K false) true) 1 (* 1 ((Y fact_) (pred 1))))
(((fn [f x] (f x)) (K false) true) 1 (* 1 ((Y fact_) (pred 1))))
(((fn [x] ((K false) x)) true) 1 (* 1 ((Y fact_) (pred 1))))
(((K false) true) 1 (* 1 ((Y fact_) (pred 1))))
((((fn [x] (fn [u] x)) false) true) 1 (* 1 ((Y fact_) (pred 1))))
(((fn [u] false) true) 1 (* 1 ((Y fact_) (pred 1))))
(false 1 (* 1 ((Y fact_) (pred 1))))
(* 1 ((Y fact_) (pred 1)))
((fn [m n] (fn [f x] (m (n f) x))) 1 ((Y fact_) (pred 1)))
((fn [n] (fn [f x] (1 (n f) x))) ((Y fact_) (pred 1)))
(fn [f x] (1 (((Y fact_) (pred 1)) f) x))
(fn [f x] ((fn [f x] (f x)) (((Y fact_) (pred 1)) f) x))
(fn [f x] ((fn [x] ((((Y fact_) (pred 1)) f) x)) x))
(fn [f x] ((((Y fact_) (pred 1)) f) x))
(fn [f x] (((((fn [f] ((fn [x] (x x)) (fn [x] (f (x x))))) fact_) (pred 1)) f) x))
(fn [f x] (((((fn [x] (x x)) (fn [x] (fact_ (x x)))) (pred 1)) f) x))
(fn [f x] (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 1)) f) x))
(fn [f x] ((((fact_ ((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x))))) (pred 1)) f) x))
(fn [f x] (((((fn [f n] ((zero? n) 1 (* n (f (pred n))))) ((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x))))) (pred 1)) f) x))
(fn [f x] (((((fn [f n] ((zero? n) 1 (* n (f (pred n))))) (Y fact_)) (pred 1)) f) x))
(fn [f x] ((((fn [n] ((zero? n) 1 (* n ((Y fact_) (pred n))))) (pred 1)) f) x))
(fn [f x] ((((zero? (pred 1)) 1 (* (pred 1) ((Y fact_) (pred (pred 1))))) f) x))
(fn [f x] (((((fn [n] (n (K false) true)) (pred 1)) 1 (* (pred 1) ((Y fact_) (pred (pred 1))))) f) x))
(fn [f x] (((((pred 1) (K false) true) 1 (* (pred 1) ((Y fact_) (pred (pred 1))))) f) x))
(fn [f x] ((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) 1) (K false) true) 1 (* (pred 1) ((Y fact_) (pred (pred 1))))) f) x))
(fn [f x] (((((fn [f x] (extract (1 (inc f) (K x)))) (K false) true) 1 (* (pred 1) ((Y fact_) (pred (pred 1))))) f) x))
(fn [f x] (((((fn [x] (extract (1 (inc (K false)) (K x)))) true) 1 (* (pred 1) ((Y fact_) (pred (pred 1))))) f) x))
(fn [f x] ((((extract (1 (inc (K false)) (K true))) 1 (* (pred 1) ((Y fact_) (pred (pred 1))))) f) x))
(fn [f x] (((((fn [k] (k I)) (1 (inc (K false)) (K true))) 1 (* (pred 1) ((Y fact_) (pred (pred 1))))) f) x))
(fn [f x] (((((1 (inc (K false)) (K true)) I) 1 (* (pred 1) ((Y fact_) (pred (pred 1))))) f) x))
(fn [f x] ((((((fn [f x] (f x)) (inc (K false)) (K true)) I) 1 (* (pred 1) ((Y fact_) (pred (pred 1))))) f) x))
(fn [f x] ((((((fn [x] ((inc (K false)) x)) (K true)) I) 1 (* (pred 1) ((Y fact_) (pred (pred 1))))) f) x))
(fn [f x] ((((((inc (K false)) (K true)) I) 1 (* (pred 1) ((Y fact_) (pred (pred 1))))) f) x))
(fn [f x] (((((((fn [f] (fn [g h] (h (g f)))) (K false)) (K true)) I) 1 (* (pred 1) ((Y fact_) (pred (pred 1))))) f) x))
(fn [f x] ((((((fn [g h] (h (g (K false)))) (K true)) I) 1 (* (pred 1) ((Y fact_) (pred (pred 1))))) f) x))
(fn [f x] (((((fn [h] (h ((K true) (K false)))) I) 1 (* (pred 1) ((Y fact_) (pred (pred 1))))) f) x))
(fn [f x] ((((I ((K true) (K false))) 1 (* (pred 1) ((Y fact_) (pred (pred 1))))) f) x))
(fn [f x] (((((K true) (K false)) 1 (* (pred 1) ((Y fact_) (pred (pred 1))))) f) x))
(fn [f x] ((((((fn [x] (fn [u] x)) true) (K false)) 1 (* (pred 1) ((Y fact_) (pred (pred 1))))) f) x))
(fn [f x] (((((fn [u] true) (K false)) 1 (* (pred 1) ((Y fact_) (pred (pred 1))))) f) x))
(fn [f x] (((true 1 (* (pred 1) ((Y fact_) (pred (pred 1))))) f) x))
(fn [f x] ((1 f) x))
(fn [f x] (((fn [f x] (f x)) f) x))
(fn [f x] ((fn [x] (f x)) x))
(fn [f x] (f x))
