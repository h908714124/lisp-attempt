(fact 3)
((Y fact_) 3)
(((fn [f] ((fn [x] (x x)) (fn [x] (f (x x))))) fact_) 3)
(((fn [x] (x x)) (fn [x] (fact_ (x x)))) 3)
(((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) 3)
((fact_ ((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x))))) 3)
(((fn [f n] ((zero? n) 1 (* n (f (pred n))))) ((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x))))) 3)
((fn [n] ((zero? n) 1 (* n (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred n))))) 3)
((zero? 3) 1 (* 3 (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3))))
(((fn [n] (n (K false) true)) 3) 1 (* 3 (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3))))
((3 (K false) true) 1 (* 3 (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3))))
(((fn [f x] (f (f (f x)))) (K false) true) 1 (* 3 (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3))))
(((fn [x] ((K false) ((K false) ((K false) x)))) true) 1 (* 3 (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3))))
(((K false) ((K false) ((K false) true))) 1 (* 3 (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3))))
((((fn [x] (fn [u] x)) false) ((K false) ((K false) true))) 1 (* 3 (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3))))
(((fn [u] false) ((K false) ((K false) true))) 1 (* 3 (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3))))
(false 1 (* 3 (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3))))
((fn [a b] b) 1 (* 3 (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3))))
((fn [b] b) (* 3 (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3))))
(* 3 (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)))
((fn [m n] (fn [f x1] (m (n f) x1))) 3 (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)))
((fn [n] (fn [f x1] (3 (n f) x1))) (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)))
(fn [f x1] (3 ((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))
(fn [f x1] ((fn [f x2] (f (f (f x2)))) ((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))
(fn [f x1] ((fn [x2] (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x2)))) x1))
(fn [f x1] (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] ((((fact_ ((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x))))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] (((((fn [f n] ((zero? n) 1 (* n (f (pred n))))) ((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x))))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] ((((fn [n] ((zero? n) 1 (* n (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred n))))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] ((((zero? (pred 3)) 1 (* (pred 3) (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))))) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] (((((fn [n] (n (K false) true)) (pred 3)) 1 (* (pred 3) (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))))) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] (((((pred 3) (K false) true) 1 (* (pred 3) (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))))) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] ((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) 3) (K false) true) 1 (* (pred 3) (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))))) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] (((((fn [f x] (extract (3 (inc f) (K x)))) (K false) true) 1 (* (pred 3) (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))))) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] (((((fn [x] (extract (3 (inc (K false)) (K x)))) true) 1 (* (pred 3) (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))))) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] ((((extract (3 (inc (K false)) (K true))) 1 (* (pred 3) (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))))) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] (((((fn [k] (k I)) (3 (inc (K false)) (K true))) 1 (* (pred 3) (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))))) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] (((((3 (inc (K false)) (K true)) I) 1 (* (pred 3) (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))))) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] ((((((fn [f x] (f (f (f x)))) (inc (K false)) (K true)) I) 1 (* (pred 3) (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))))) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] ((((((fn [x] ((inc (K false)) ((inc (K false)) ((inc (K false)) x)))) (K true)) I) 1 (* (pred 3) (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))))) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] ((((((inc (K false)) ((inc (K false)) ((inc (K false)) (K true)))) I) 1 (* (pred 3) (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))))) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] (((((((fn [f] (fn [g h] (h (g f)))) (K false)) ((inc (K false)) ((inc (K false)) (K true)))) I) 1 (* (pred 3) (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))))) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] ((((((fn [g h] (h (g (K false)))) ((inc (K false)) ((inc (K false)) (K true)))) I) 1 (* (pred 3) (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))))) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] (((((fn [h] (h (((inc (K false)) ((inc (K false)) (K true))) (K false)))) I) 1 (* (pred 3) (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))))) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] ((((I (((inc (K false)) ((inc (K false)) (K true))) (K false))) 1 (* (pred 3) (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))))) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] (((((fn [x] x) (((inc (K false)) ((inc (K false)) (K true))) (K false))) 1 (* (pred 3) (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))))) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] ((((((inc (K false)) ((inc (K false)) (K true))) (K false)) 1 (* (pred 3) (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))))) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] (((((((fn [f] (fn [g h] (h (g f)))) (K false)) ((inc (K false)) (K true))) (K false)) 1 (* (pred 3) (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))))) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] ((((((fn [g h] (h (g (K false)))) ((inc (K false)) (K true))) (K false)) 1 (* (pred 3) (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))))) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] (((((fn [h] (h (((inc (K false)) (K true)) (K false)))) (K false)) 1 (* (pred 3) (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))))) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] (((((K false) (((inc (K false)) (K true)) (K false))) 1 (* (pred 3) (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))))) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] ((((((fn [x] (fn [u] x)) false) (((inc (K false)) (K true)) (K false))) 1 (* (pred 3) (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))))) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] (((((fn [u] false) (((inc (K false)) (K true)) (K false))) 1 (* (pred 3) (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))))) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] (((false 1 (* (pred 3) (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))))) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] ((((fn [a b] b) 1 (* (pred 3) (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))))) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] ((((fn [b] b) (* (pred 3) (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))))) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] (((* (pred 3) (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3)))) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] ((((fn [m n] (fn [f x2] (m (n f) x2))) (pred 3) (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3)))) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] ((((fn [n] (fn [f x2] ((pred 3) (n f) x2))) (((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3)))) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] (((fn [f x2] ((pred 3) ((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))) f) x2)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] ((fn [x2] ((pred 3) ((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))) f) x2)) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) (((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred 3)) f) x1))))
(fn [f x1] ((pred 3) ((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))))
(fn [f x1] (((fn [n] (fn [f x] (extract (n (inc f) (K x))))) 3) ((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))))
(fn [f x1] ((fn [f x] (extract (3 (inc f) (K x)))) ((((fn [x] (fact_ (x x))) (fn [x] (fact_ (x x)))) (pred (pred 3))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))))
(fn [f x1] ((fn [x] (extract (3 (inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x)))) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))))
(fn [f x1] (extract (3 (inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))))))
(fn [f x1] ((fn [k] (k I)) (3 (inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))))))
(fn [f x1] ((3 (inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) I))
(fn [f x1] (((fn [f x] (f (f (f x)))) (inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) I))
(fn [f x1] (((fn [x] ((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) ((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) ((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) x)))) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) I))
(fn [f x1] (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) ((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) ((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))) I))
(fn [f x1] ((((fn [f] (fn [g h] (h (g f)))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) ((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) ((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))) I))
(fn [f x1] (((fn [g h] (h (g ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) ((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) ((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))) I))
(fn [f x1] ((fn [h] (h (((inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)) ((inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) I))
(fn [f x1] (I (((inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)) ((inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))
(fn [f x1] ((fn [x] x) (((inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)) ((inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))
(fn [f x1] (((inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)) ((inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))
(fn [f x1] ((((fn [f] (fn [g h] (h (g f)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)) ((inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))
(fn [f x1] (((fn [g h] (h (g ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) ((inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))
(fn [f x1] ((fn [h] (h (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))
(fn [f x1] (((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred 3))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] ((((fact_ ((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5))))) (pred (pred 3))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (((((fn [f n] ((zero? n) 1 (* n (f (pred n))))) ((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5))))) (pred (pred 3))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] ((((fn [n] ((zero? n) 1 (* n (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred n))))) (pred (pred 3))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] ((((zero? (pred (pred 3))) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (((((fn [n] (n (K false) true)) (pred (pred 3))) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (((((pred (pred 3)) (K false) true) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] ((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) (pred 3)) (K false) true) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (((((fn [f x] (extract ((pred 3) (inc f) (K x)))) (K false) true) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (((((fn [x] (extract ((pred 3) (inc (K false)) (K x)))) true) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] ((((extract ((pred 3) (inc (K false)) (K true))) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (((((fn [k] (k I)) ((pred 3) (inc (K false)) (K true))) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] ((((((pred 3) (inc (K false)) (K true)) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) 3) (inc (K false)) (K true)) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] ((((((fn [f x] (extract (3 (inc f) (K x)))) (inc (K false)) (K true)) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] ((((((fn [x] (extract (3 (inc (inc (K false))) (K x)))) (K true)) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (((((extract (3 (inc (inc (K false))) (K (K true)))) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] ((((((fn [k] (k I)) (3 (inc (inc (K false))) (K (K true)))) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] ((((((3 (inc (inc (K false))) (K (K true))) I) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (((((((fn [f x] (f (f (f x)))) (inc (inc (K false))) (K (K true))) I) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (((((((fn [x] ((inc (inc (K false))) ((inc (inc (K false))) ((inc (inc (K false))) x)))) (K (K true))) I) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (((((((inc (inc (K false))) ((inc (inc (K false))) ((inc (inc (K false))) (K (K true))))) I) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] ((((((((fn [f] (fn [g h] (h (g f)))) (inc (K false))) ((inc (inc (K false))) ((inc (inc (K false))) (K (K true))))) I) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (((((((fn [g h] (h (g (inc (K false))))) ((inc (inc (K false))) ((inc (inc (K false))) (K (K true))))) I) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] ((((((fn [h] (h (((inc (inc (K false))) ((inc (inc (K false))) (K (K true)))) (inc (K false))))) I) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (((((I (((inc (inc (K false))) ((inc (inc (K false))) (K (K true)))) (inc (K false)))) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] ((((((fn [x] x) (((inc (inc (K false))) ((inc (inc (K false))) (K (K true)))) (inc (K false)))) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (((((((inc (inc (K false))) ((inc (inc (K false))) (K (K true)))) (inc (K false))) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] ((((((((fn [f] (fn [g h] (h (g f)))) (inc (K false))) ((inc (inc (K false))) (K (K true)))) (inc (K false))) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (((((((fn [g h] (h (g (inc (K false))))) ((inc (inc (K false))) (K (K true)))) (inc (K false))) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] ((((((fn [h] (h (((inc (inc (K false))) (K (K true))) (inc (K false))))) (inc (K false))) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] ((((((inc (K false)) (((inc (inc (K false))) (K (K true))) (inc (K false)))) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (((((((fn [f] (fn [g h] (h (g f)))) (K false)) (((inc (inc (K false))) (K (K true))) (inc (K false)))) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] ((((((fn [g h] (h (g (K false)))) (((inc (inc (K false))) (K (K true))) (inc (K false)))) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (((((fn [h] (h ((((inc (inc (K false))) (K (K true))) (inc (K false))) (K false)))) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] ((((I ((((inc (inc (K false))) (K (K true))) (inc (K false))) (K false))) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (((((fn [x] x) ((((inc (inc (K false))) (K (K true))) (inc (K false))) (K false))) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (((((((inc (inc (K false))) (K (K true))) (inc (K false))) (K false)) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] ((((((((fn [f] (fn [g h] (h (g f)))) (inc (K false))) (K (K true))) (inc (K false))) (K false)) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (((((((fn [g h] (h (g (inc (K false))))) (K (K true))) (inc (K false))) (K false)) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] ((((((fn [h] (h ((K (K true)) (inc (K false))))) (inc (K false))) (K false)) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] ((((((inc (K false)) ((K (K true)) (inc (K false)))) (K false)) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (((((((fn [f] (fn [g h] (h (g f)))) (K false)) ((K (K true)) (inc (K false)))) (K false)) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] ((((((fn [g h] (h (g (K false)))) ((K (K true)) (inc (K false)))) (K false)) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (((((fn [h] (h (((K (K true)) (inc (K false))) (K false)))) (K false)) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (((((K false) (((K (K true)) (inc (K false))) (K false))) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] ((((((fn [x] (fn [u] x)) false) (((K (K true)) (inc (K false))) (K false))) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (((((fn [u] false) (((K (K true)) (inc (K false))) (K false))) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (((false 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] ((((fn [a b] b) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] ((((fn [b] b) (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (((* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] ((((fn [m n] (fn [f x] (m (n f) x))) (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] ((((fn [n] (fn [f x] ((pred (pred 3)) (n f) x))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (((fn [f x] ((pred (pred 3)) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f) x)) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] ((fn [x] ((pred (pred 3)) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f) x)) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] ((pred (pred 3)) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (((fn [n] (fn [f x] (extract (n (inc f) (K x))))) (pred 3)) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] ((fn [f x] (extract ((pred 3) (inc f) (K x)))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] ((fn [x] (extract ((pred 3) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)) (K x)))) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (extract ((pred 3) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)) (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] ((fn [k] (k I)) ((pred 3) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)) (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (((pred 3) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)) (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) I))
(fn [f x1] ((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) 3) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)) (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) I))
(fn [f x1] (((fn [f x] (extract (3 (inc f) (K x)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)) (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) I))
(fn [f x1] (((fn [x] (extract (3 (inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K x)))) (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) I))
(fn [f x1] ((extract (3 (inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))))) I))
(fn [f x1] (((fn [k] (k I)) (3 (inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))))) I))
(fn [f x1] (((3 (inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))) I) I))
(fn [f x1] ((((fn [f x] (f (f (f x)))) (inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))) I) I))
(fn [f x1] ((((fn [x] ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) x)))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))) I) I))
(fn [f x1] ((((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))) I) I))
(fn [f x1] (((((fn [f] (fn [g h] (h (g f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))) I) I))
(fn [f x1] ((((fn [g h] (h (g (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))) I) I))
(fn [f x1] (((fn [h] (h (((inc (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))) I) I))
(fn [f x1] ((I (((inc (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))) I))
(fn [f x1] (((fn [x] x) (((inc (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))) I))
(fn [f x1] ((((inc (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) I))
(fn [f x1] (((((fn [f] (fn [g h] (h (g f)))) (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) I))
(fn [f x1] ((((fn [g h] (h (g (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))) ((inc (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) I))
(fn [f x1] (((fn [h] (h (((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))) (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) I))
(fn [f x1] (((inc ((((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred 3)))) f)) (((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))) (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)))) I))
(fn [f x1] ((((fn [f] (fn [g h] (h (g f)))) ((((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred 3)))) f)) (((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))) (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)))) I))
(fn [f x1] (((fn [g h] (h (g ((((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred 3)))) f)))) (((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))) (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)))) I))
(fn [f x1] ((fn [h] (h ((((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))) (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) ((((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred 3)))) f)))) I))
(fn [f x1] (I ((((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))) (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) ((((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((fn [x] x) ((((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))) (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) ((((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))) (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) ((((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred 3)))) f)))
(fn [f x1] (((((fn [f] (fn [g h] (h (g f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))) (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) ((((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred 3)))) f)))
(fn [f x1] ((((fn [g h] (h (g (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))) (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) ((((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred 3)))) f)))
(fn [f x1] (((fn [h] (h ((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))) (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) ((((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred 3)))) f)))
(fn [f x1] (((inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)) ((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))) ((((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred 3)))) f)))
(fn [f x1] ((((fn [f] (fn [g h] (h (g f)))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)) ((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))) ((((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred 3)))) f)))
(fn [f x1] (((fn [g h] (h (g ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)))) ((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))) ((((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred 3)))) f)))
(fn [f x1] ((fn [h] (h (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)))) ((((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred 3)))) f)))
(fn [f x1] (((((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred 3)))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((fact_ ((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7))))) (pred (pred (pred 3)))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((fn [f n] ((zero? n) 1 (* n (f (pred n))))) ((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7))))) (pred (pred (pred 3)))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((fn [n] ((zero? n) 1 (* n (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred n))))) (pred (pred (pred 3)))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((zero? (pred (pred (pred 3)))) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((fn [n] (n (K false) true)) (pred (pred (pred 3)))) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((pred (pred (pred 3))) (K false) true) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) (pred (pred 3))) (K false) true) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((fn [f x] (extract ((pred (pred 3)) (inc f) (K x)))) (K false) true) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((fn [x] (extract ((pred (pred 3)) (inc (K false)) (K x)))) true) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((extract ((pred (pred 3)) (inc (K false)) (K true))) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((fn [k] (k I)) ((pred (pred 3)) (inc (K false)) (K true))) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((((pred (pred 3)) (inc (K false)) (K true)) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) (pred 3)) (inc (K false)) (K true)) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((((fn [f x] (extract ((pred 3) (inc f) (K x)))) (inc (K false)) (K true)) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((((fn [x] (extract ((pred 3) (inc (inc (K false))) (K x)))) (K true)) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((extract ((pred 3) (inc (inc (K false))) (K (K true)))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((((fn [k] (k I)) ((pred 3) (inc (inc (K false))) (K (K true)))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((((pred 3) (inc (inc (K false))) (K (K true))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) 3) (inc (inc (K false))) (K (K true))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((((fn [f x] (extract (3 (inc f) (K x)))) (inc (inc (K false))) (K (K true))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((((fn [x] (extract (3 (inc (inc (inc (K false)))) (K x)))) (K (K true))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((((extract (3 (inc (inc (inc (K false)))) (K (K (K true))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((((fn [k] (k I)) (3 (inc (inc (inc (K false)))) (K (K (K true))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((((3 (inc (inc (inc (K false)))) (K (K (K true)))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((((((fn [f x] (f (f (f x)))) (inc (inc (inc (K false)))) (K (K (K true)))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((((((fn [x] ((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) x)))) (K (K (K true)))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((((((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true)))))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((((((fn [f] (fn [g h] (h (g f)))) (inc (inc (K false)))) ((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true)))))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((((((fn [g h] (h (g (inc (inc (K false)))))) ((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true)))))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((((fn [h] (h (((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false)))))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((((I (((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((((fn [x] x) (((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((((((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false)))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((((((fn [f] (fn [g h] (h (g f)))) (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false)))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((((((fn [g h] (h (g (inc (inc (K false)))))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false)))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((((fn [h] (h (((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))))) (inc (inc (K false)))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((((inc (inc (K false))) (((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((((((fn [f] (fn [g h] (h (g f)))) (inc (K false))) (((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((((fn [g h] (h (g (inc (K false))))) (((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((((fn [h] (h ((((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((I ((((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((((fn [x] x) ((((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((((((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((((((fn [f] (fn [g h] (h (g f)))) (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((((((fn [g h] (h (g (inc (inc (K false)))))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((((fn [h] (h ((K (K (K true))) (inc (inc (K false)))))) (inc (inc (K false)))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((((inc (inc (K false))) ((K (K (K true))) (inc (inc (K false))))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((((((fn [f] (fn [g h] (h (g f)))) (inc (K false))) ((K (K (K true))) (inc (inc (K false))))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((((fn [g h] (h (g (inc (K false))))) ((K (K (K true))) (inc (inc (K false))))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((((fn [h] (h (((K (K (K true))) (inc (inc (K false)))) (inc (K false))))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((((inc (K false)) (((K (K (K true))) (inc (inc (K false)))) (inc (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((((fn [f] (fn [g h] (h (g f)))) (K false)) (((K (K (K true))) (inc (inc (K false)))) (inc (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((((fn [g h] (h (g (K false)))) (((K (K (K true))) (inc (inc (K false)))) (inc (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((fn [h] (h ((((K (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((I ((((K (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false))) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((fn [x] x) ((((K (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false))) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((((K (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((((((fn [x] (fn [u] x)) (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((((fn [u] (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((((K (K true)) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((((fn [x] (fn [u] x)) (K true)) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((((fn [u] (K true)) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((K true) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((((fn [x] (fn [u] x)) true) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((((fn [u] true) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((true 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((fn [a b] a) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((((fn [b] 1) (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((1 f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (((fn [f x] (f x)) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] ((fn [x] (f x)) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (f (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (f ((((fn [x] (fn [u] x)) (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (f (((fn [u] (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (f ((K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (f (((fn [x] (fn [u] x)) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (f ((fn [u] (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (f (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (f ((((fn [f] (fn [g h] (h (g f)))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (f (((fn [g h] (h (g ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (f ((fn [h] (h ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))
(fn [f x1] (f (((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f ((((fact_ ((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4))))) (pred (pred 3))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (((((fn [f n] ((zero? n) 1 (* n (f (pred n))))) ((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4))))) (pred (pred 3))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f ((((fn [n] ((zero? n) 1 (* n (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred n))))) (pred (pred 3))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f ((((zero? (pred (pred 3))) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (((((fn [n] (n (K false) true)) (pred (pred 3))) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (((((pred (pred 3)) (K false) true) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f ((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) (pred 3)) (K false) true) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (((((fn [f x] (extract ((pred 3) (inc f) (K x)))) (K false) true) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (((((fn [x] (extract ((pred 3) (inc (K false)) (K x)))) true) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f ((((extract ((pred 3) (inc (K false)) (K true))) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (((((fn [k] (k I)) ((pred 3) (inc (K false)) (K true))) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f ((((((pred 3) (inc (K false)) (K true)) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) 3) (inc (K false)) (K true)) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f ((((((fn [f x] (extract (3 (inc f) (K x)))) (inc (K false)) (K true)) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f ((((((fn [x] (extract (3 (inc (inc (K false))) (K x)))) (K true)) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (((((extract (3 (inc (inc (K false))) (K (K true)))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f ((((((fn [k] (k I)) (3 (inc (inc (K false))) (K (K true)))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f ((((((3 (inc (inc (K false))) (K (K true))) I) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (((((((fn [f x] (f (f (f x)))) (inc (inc (K false))) (K (K true))) I) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (((((((fn [x] ((inc (inc (K false))) ((inc (inc (K false))) ((inc (inc (K false))) x)))) (K (K true))) I) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (((((((inc (inc (K false))) ((inc (inc (K false))) ((inc (inc (K false))) (K (K true))))) I) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f ((((((((fn [f] (fn [g h] (h (g f)))) (inc (K false))) ((inc (inc (K false))) ((inc (inc (K false))) (K (K true))))) I) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (((((((fn [g h] (h (g (inc (K false))))) ((inc (inc (K false))) ((inc (inc (K false))) (K (K true))))) I) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f ((((((fn [h] (h (((inc (inc (K false))) ((inc (inc (K false))) (K (K true)))) (inc (K false))))) I) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (((((I (((inc (inc (K false))) ((inc (inc (K false))) (K (K true)))) (inc (K false)))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f ((((((fn [x] x) (((inc (inc (K false))) ((inc (inc (K false))) (K (K true)))) (inc (K false)))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (((((((inc (inc (K false))) ((inc (inc (K false))) (K (K true)))) (inc (K false))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f ((((((((fn [f] (fn [g h] (h (g f)))) (inc (K false))) ((inc (inc (K false))) (K (K true)))) (inc (K false))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (((((((fn [g h] (h (g (inc (K false))))) ((inc (inc (K false))) (K (K true)))) (inc (K false))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f ((((((fn [h] (h (((inc (inc (K false))) (K (K true))) (inc (K false))))) (inc (K false))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f ((((((inc (K false)) (((inc (inc (K false))) (K (K true))) (inc (K false)))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (((((((fn [f] (fn [g h] (h (g f)))) (K false)) (((inc (inc (K false))) (K (K true))) (inc (K false)))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f ((((((fn [g h] (h (g (K false)))) (((inc (inc (K false))) (K (K true))) (inc (K false)))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (((((fn [h] (h ((((inc (inc (K false))) (K (K true))) (inc (K false))) (K false)))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f ((((I ((((inc (inc (K false))) (K (K true))) (inc (K false))) (K false))) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (((((fn [x] x) ((((inc (inc (K false))) (K (K true))) (inc (K false))) (K false))) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (((((((inc (inc (K false))) (K (K true))) (inc (K false))) (K false)) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f ((((((((fn [f] (fn [g h] (h (g f)))) (inc (K false))) (K (K true))) (inc (K false))) (K false)) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (((((((fn [g h] (h (g (inc (K false))))) (K (K true))) (inc (K false))) (K false)) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f ((((((fn [h] (h ((K (K true)) (inc (K false))))) (inc (K false))) (K false)) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f ((((((inc (K false)) ((K (K true)) (inc (K false)))) (K false)) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (((((((fn [f] (fn [g h] (h (g f)))) (K false)) ((K (K true)) (inc (K false)))) (K false)) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f ((((((fn [g h] (h (g (K false)))) ((K (K true)) (inc (K false)))) (K false)) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (((((fn [h] (h (((K (K true)) (inc (K false))) (K false)))) (K false)) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (((((K false) (((K (K true)) (inc (K false))) (K false))) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f ((((((fn [x] (fn [u] x)) false) (((K (K true)) (inc (K false))) (K false))) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (((((fn [u] false) (((K (K true)) (inc (K false))) (K false))) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (((false 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f ((((fn [a b] b) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f ((((fn [b] b) (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (((* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f ((((fn [m n] (fn [f x] (m (n f) x))) (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f ((((fn [n] (fn [f x] ((pred (pred 3)) (n f) x))) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3))))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (((fn [f x] ((pred (pred 3)) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f) x)) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f ((fn [x] ((pred (pred 3)) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f) x)) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f ((pred (pred 3)) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (((fn [n] (fn [f x] (extract (n (inc f) (K x))))) (pred 3)) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f ((fn [f x] (extract ((pred 3) (inc f) (K x)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f ((fn [x] (extract ((pred 3) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)) (K x)))) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (extract ((pred 3) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)) (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))
(fn [f x1] (f ((fn [k] (k I)) ((pred 3) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)) (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (((pred 3) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)) (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) I)))
(fn [f x1] (f ((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) 3) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)) (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) I)))
(fn [f x1] (f (((fn [f x] (extract (3 (inc f) (K x)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)) (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) I)))
(fn [f x1] (f (((fn [x] (extract (3 (inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K x)))) (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) I)))
(fn [f x1] (f ((extract (3 (inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))) I)))
(fn [f x1] (f (((fn [k] (k I)) (3 (inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))) I)))
(fn [f x1] (f (((3 (inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))) I) I)))
(fn [f x1] (f ((((fn [f x] (f (f (f x)))) (inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))) I) I)))
(fn [f x1] (f ((((fn [x] ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) x)))) (K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))) I) I)))
(fn [f x1] (f ((((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))))) I) I)))
(fn [f x1] (f (((((fn [f] (fn [g h] (h (g f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))))) I) I)))
(fn [f x1] (f ((((fn [g h] (h (g (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))))) ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))))) I) I)))
(fn [f x1] (f (((fn [h] (h (((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))))) I) I)))
(fn [f x1] (f ((I (((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))) I)))
(fn [f x1] (f (((fn [x] x) (((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))) I)))
(fn [f x1] (f ((((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) I)))
(fn [f x1] (f (((((fn [f] (fn [g h] (h (g f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) I)))
(fn [f x1] (f ((((fn [g h] (h (g (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) I)))
(fn [f x1] (f (((fn [h] (h (((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) I)))
(fn [f x1] (f (((inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)) (((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))) I)))
(fn [f x1] (f ((((fn [f] (fn [g h] (h (g f)))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)) (((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))) I)))
(fn [f x1] (f (((fn [g h] (h (g ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)))) (((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))) I)))
(fn [f x1] (f ((fn [h] (h ((((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)))) I)))
(fn [f x1] (f (I ((((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((fn [x] x) ((((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (f (((((fn [f] (fn [g h] (h (g f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (f ((((fn [g h] (h (g (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))))) (K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (f (((fn [h] (h ((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (f (((inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)) ((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (f ((((fn [f] (fn [g h] (h (g f)))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)) ((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (f (((fn [g h] (h (g ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))) ((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (f ((fn [h] (h (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))
(fn [f x1] (f (((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((fact_ ((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6))))) (pred (pred (pred 3)))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((fn [f n] ((zero? n) 1 (* n (f (pred n))))) ((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6))))) (pred (pred (pred 3)))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((fn [n] ((zero? n) 1 (* n (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred n))))) (pred (pred (pred 3)))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((zero? (pred (pred (pred 3)))) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((fn [n] (n (K false) true)) (pred (pred (pred 3)))) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((pred (pred (pred 3))) (K false) true) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) (pred (pred 3))) (K false) true) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((fn [f x] (extract ((pred (pred 3)) (inc f) (K x)))) (K false) true) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((fn [x] (extract ((pred (pred 3)) (inc (K false)) (K x)))) true) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((extract ((pred (pred 3)) (inc (K false)) (K true))) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((fn [k] (k I)) ((pred (pred 3)) (inc (K false)) (K true))) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((((pred (pred 3)) (inc (K false)) (K true)) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) (pred 3)) (inc (K false)) (K true)) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((((fn [f x] (extract ((pred 3) (inc f) (K x)))) (inc (K false)) (K true)) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((((fn [x] (extract ((pred 3) (inc (inc (K false))) (K x)))) (K true)) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((extract ((pred 3) (inc (inc (K false))) (K (K true)))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((((fn [k] (k I)) ((pred 3) (inc (inc (K false))) (K (K true)))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((((pred 3) (inc (inc (K false))) (K (K true))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) 3) (inc (inc (K false))) (K (K true))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((((fn [f x] (extract (3 (inc f) (K x)))) (inc (inc (K false))) (K (K true))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((((fn [x] (extract (3 (inc (inc (inc (K false)))) (K x)))) (K (K true))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((((extract (3 (inc (inc (inc (K false)))) (K (K (K true))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((((fn [k] (k I)) (3 (inc (inc (inc (K false)))) (K (K (K true))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((((3 (inc (inc (inc (K false)))) (K (K (K true)))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((((((fn [f x] (f (f (f x)))) (inc (inc (inc (K false)))) (K (K (K true)))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((((((fn [x] ((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) x)))) (K (K (K true)))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((((((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true)))))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((((((fn [f] (fn [g h] (h (g f)))) (inc (inc (K false)))) ((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true)))))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((((((fn [g h] (h (g (inc (inc (K false)))))) ((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true)))))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((((fn [h] (h (((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false)))))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((((I (((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((((fn [x] x) (((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((((((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false)))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((((((fn [f] (fn [g h] (h (g f)))) (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false)))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((((((fn [g h] (h (g (inc (inc (K false)))))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false)))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((((fn [h] (h (((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))))) (inc (inc (K false)))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((((inc (inc (K false))) (((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((((((fn [f] (fn [g h] (h (g f)))) (inc (K false))) (((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((((fn [g h] (h (g (inc (K false))))) (((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((((fn [h] (h ((((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((I ((((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((((fn [x] x) ((((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((((((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((((((fn [f] (fn [g h] (h (g f)))) (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((((((fn [g h] (h (g (inc (inc (K false)))))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((((fn [h] (h ((K (K (K true))) (inc (inc (K false)))))) (inc (inc (K false)))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((((inc (inc (K false))) ((K (K (K true))) (inc (inc (K false))))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((((((fn [f] (fn [g h] (h (g f)))) (inc (K false))) ((K (K (K true))) (inc (inc (K false))))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((((fn [g h] (h (g (inc (K false))))) ((K (K (K true))) (inc (inc (K false))))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((((fn [h] (h (((K (K (K true))) (inc (inc (K false)))) (inc (K false))))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((((inc (K false)) (((K (K (K true))) (inc (inc (K false)))) (inc (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((((fn [f] (fn [g h] (h (g f)))) (K false)) (((K (K (K true))) (inc (inc (K false)))) (inc (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((((fn [g h] (h (g (K false)))) (((K (K (K true))) (inc (inc (K false)))) (inc (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((fn [h] (h ((((K (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((I ((((K (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false))) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((fn [x] x) ((((K (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false))) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((((K (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((((((fn [x] (fn [u] x)) (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((((fn [u] (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((((K (K true)) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((((fn [x] (fn [u] x)) (K true)) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((((fn [u] (K true)) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((K true) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((((fn [x] (fn [u] x)) true) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((((fn [u] true) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((true 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((fn [a b] a) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((((fn [b] 1) (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((1 f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (((fn [f x] (f x)) f) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f ((fn [x] (f x)) (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (f (((K (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (f ((((fn [x] (fn [u] x)) (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (f (((fn [u] (K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (f ((K ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (f (((fn [x] (fn [u] x)) ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (f ((fn [u] ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (f ((K (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (f (((fn [x] (fn [u] x)) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (f ((fn [u] (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))
(fn [f x1] (f (f (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f ((((fact_ ((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3))))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f (((((fn [f n] ((zero? n) 1 (* n (f (pred n))))) ((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3))))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f ((((fn [n] ((zero? n) 1 (* n (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred n))))) (pred 3)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f ((((zero? (pred 3)) 1 (* (pred 3) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f (((((fn [n] (n (K false) true)) (pred 3)) 1 (* (pred 3) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f (((((pred 3) (K false) true) 1 (* (pred 3) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f ((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) 3) (K false) true) 1 (* (pred 3) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f (((((fn [f x] (extract (3 (inc f) (K x)))) (K false) true) 1 (* (pred 3) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f (((((fn [x] (extract (3 (inc (K false)) (K x)))) true) 1 (* (pred 3) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f ((((extract (3 (inc (K false)) (K true))) 1 (* (pred 3) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f (((((fn [k] (k I)) (3 (inc (K false)) (K true))) 1 (* (pred 3) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f (((((3 (inc (K false)) (K true)) I) 1 (* (pred 3) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f ((((((fn [f x] (f (f (f x)))) (inc (K false)) (K true)) I) 1 (* (pred 3) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f ((((((fn [x] ((inc (K false)) ((inc (K false)) ((inc (K false)) x)))) (K true)) I) 1 (* (pred 3) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f ((((((inc (K false)) ((inc (K false)) ((inc (K false)) (K true)))) I) 1 (* (pred 3) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f (((((((fn [f] (fn [g h] (h (g f)))) (K false)) ((inc (K false)) ((inc (K false)) (K true)))) I) 1 (* (pred 3) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f ((((((fn [g h] (h (g (K false)))) ((inc (K false)) ((inc (K false)) (K true)))) I) 1 (* (pred 3) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f (((((fn [h] (h (((inc (K false)) ((inc (K false)) (K true))) (K false)))) I) 1 (* (pred 3) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f ((((I (((inc (K false)) ((inc (K false)) (K true))) (K false))) 1 (* (pred 3) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f (((((fn [x] x) (((inc (K false)) ((inc (K false)) (K true))) (K false))) 1 (* (pred 3) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f ((((((inc (K false)) ((inc (K false)) (K true))) (K false)) 1 (* (pred 3) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f (((((((fn [f] (fn [g h] (h (g f)))) (K false)) ((inc (K false)) (K true))) (K false)) 1 (* (pred 3) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f ((((((fn [g h] (h (g (K false)))) ((inc (K false)) (K true))) (K false)) 1 (* (pred 3) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f (((((fn [h] (h (((inc (K false)) (K true)) (K false)))) (K false)) 1 (* (pred 3) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f (((((K false) (((inc (K false)) (K true)) (K false))) 1 (* (pred 3) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f ((((((fn [x] (fn [u] x)) false) (((inc (K false)) (K true)) (K false))) 1 (* (pred 3) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f (((((fn [u] false) (((inc (K false)) (K true)) (K false))) 1 (* (pred 3) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f (((false 1 (* (pred 3) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f ((((fn [a b] b) 1 (* (pred 3) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f ((((fn [b] b) (* (pred 3) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f (((* (pred 3) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3)))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f ((((fn [m n] (fn [f x] (m (n f) x))) (pred 3) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3)))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f ((((fn [n] (fn [f x] ((pred 3) (n f) x))) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3)))) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f (((fn [f x] ((pred 3) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f) x)) f) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f ((fn [x] ((pred 3) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f) x)) (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f ((pred 3) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f) (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f (((fn [n] (fn [f x] (extract (n (inc f) (K x))))) 3) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f) (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f ((fn [f x] (extract (3 (inc f) (K x)))) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f) (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f ((fn [x] (extract (3 (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K x)))) (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)))))
(fn [f x1] (f (f (extract (3 (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)))))))
(fn [f x1] (f (f ((fn [k] (k I)) (3 (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)))))))
(fn [f x1] (f (f ((3 (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) I))))
(fn [f x1] (f (f (((fn [f x] (f (f (f x)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) I))))
(fn [f x1] (f (f (((fn [x] ((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) ((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) ((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) x)))) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) I))))
(fn [f x1] (f (f (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) ((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) ((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))))) I))))
(fn [f x1] (f (f ((((fn [f] (fn [g h] (h (g f)))) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) ((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) ((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))))) I))))
(fn [f x1] (f (f (((fn [g h] (h (g ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) ((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) ((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))))) I))))
(fn [f x1] (f (f ((fn [h] (h (((inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)) ((inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)))) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) I))))
(fn [f x1] (f (f (I (((inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)) ((inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)))) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((fn [x] x) (((inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)) ((inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)))) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (((inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)) ((inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)))) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))
(fn [f x1] (f (f ((((fn [f] (fn [g h] (h (g f)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)) ((inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)))) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))
(fn [f x1] (f (f (((fn [g h] (h (g ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) ((inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)))) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))
(fn [f x1] (f (f ((fn [h] (h (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))
(fn [f x1] (f (f (((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred 3))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((((fact_ ((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5))))) (pred (pred 3))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (((((fn [f n] ((zero? n) 1 (* n (f (pred n))))) ((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5))))) (pred (pred 3))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((((fn [n] ((zero? n) 1 (* n (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred n))))) (pred (pred 3))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((((zero? (pred (pred 3))) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (((((fn [n] (n (K false) true)) (pred (pred 3))) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (((((pred (pred 3)) (K false) true) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) (pred 3)) (K false) true) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (((((fn [f x] (extract ((pred 3) (inc f) (K x)))) (K false) true) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (((((fn [x] (extract ((pred 3) (inc (K false)) (K x)))) true) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((((extract ((pred 3) (inc (K false)) (K true))) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (((((fn [k] (k I)) ((pred 3) (inc (K false)) (K true))) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((((((pred 3) (inc (K false)) (K true)) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) 3) (inc (K false)) (K true)) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((((((fn [f x] (extract (3 (inc f) (K x)))) (inc (K false)) (K true)) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((((((fn [x] (extract (3 (inc (inc (K false))) (K x)))) (K true)) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (((((extract (3 (inc (inc (K false))) (K (K true)))) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((((((fn [k] (k I)) (3 (inc (inc (K false))) (K (K true)))) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((((((3 (inc (inc (K false))) (K (K true))) I) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (((((((fn [f x] (f (f (f x)))) (inc (inc (K false))) (K (K true))) I) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (((((((fn [x] ((inc (inc (K false))) ((inc (inc (K false))) ((inc (inc (K false))) x)))) (K (K true))) I) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (((((((inc (inc (K false))) ((inc (inc (K false))) ((inc (inc (K false))) (K (K true))))) I) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((((((((fn [f] (fn [g h] (h (g f)))) (inc (K false))) ((inc (inc (K false))) ((inc (inc (K false))) (K (K true))))) I) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (((((((fn [g h] (h (g (inc (K false))))) ((inc (inc (K false))) ((inc (inc (K false))) (K (K true))))) I) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((((((fn [h] (h (((inc (inc (K false))) ((inc (inc (K false))) (K (K true)))) (inc (K false))))) I) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (((((I (((inc (inc (K false))) ((inc (inc (K false))) (K (K true)))) (inc (K false)))) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((((((fn [x] x) (((inc (inc (K false))) ((inc (inc (K false))) (K (K true)))) (inc (K false)))) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (((((((inc (inc (K false))) ((inc (inc (K false))) (K (K true)))) (inc (K false))) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((((((((fn [f] (fn [g h] (h (g f)))) (inc (K false))) ((inc (inc (K false))) (K (K true)))) (inc (K false))) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (((((((fn [g h] (h (g (inc (K false))))) ((inc (inc (K false))) (K (K true)))) (inc (K false))) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((((((fn [h] (h (((inc (inc (K false))) (K (K true))) (inc (K false))))) (inc (K false))) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((((((inc (K false)) (((inc (inc (K false))) (K (K true))) (inc (K false)))) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (((((((fn [f] (fn [g h] (h (g f)))) (K false)) (((inc (inc (K false))) (K (K true))) (inc (K false)))) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((((((fn [g h] (h (g (K false)))) (((inc (inc (K false))) (K (K true))) (inc (K false)))) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (((((fn [h] (h ((((inc (inc (K false))) (K (K true))) (inc (K false))) (K false)))) I) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((((I ((((inc (inc (K false))) (K (K true))) (inc (K false))) (K false))) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (((((fn [x] x) ((((inc (inc (K false))) (K (K true))) (inc (K false))) (K false))) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (((((((inc (inc (K false))) (K (K true))) (inc (K false))) (K false)) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((((((((fn [f] (fn [g h] (h (g f)))) (inc (K false))) (K (K true))) (inc (K false))) (K false)) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (((((((fn [g h] (h (g (inc (K false))))) (K (K true))) (inc (K false))) (K false)) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((((((fn [h] (h ((K (K true)) (inc (K false))))) (inc (K false))) (K false)) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((((((inc (K false)) ((K (K true)) (inc (K false)))) (K false)) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (((((((fn [f] (fn [g h] (h (g f)))) (K false)) ((K (K true)) (inc (K false)))) (K false)) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((((((fn [g h] (h (g (K false)))) ((K (K true)) (inc (K false)))) (K false)) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (((((fn [h] (h (((K (K true)) (inc (K false))) (K false)))) (K false)) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (((((K false) (((K (K true)) (inc (K false))) (K false))) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((((((fn [x] (fn [u] x)) false) (((K (K true)) (inc (K false))) (K false))) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (((((fn [u] false) (((K (K true)) (inc (K false))) (K false))) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (((false 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((((fn [a b] b) 1 (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((((fn [b] b) (* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (((* (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((((fn [m n] (fn [f x] (m (n f) x))) (pred (pred 3)) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((((fn [n] (fn [f x] ((pred (pred 3)) (n f) x))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3))))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (((fn [f x] ((pred (pred 3)) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f) x)) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((fn [x] ((pred (pred 3)) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f) x)) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((pred (pred 3)) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (((fn [n] (fn [f x] (extract (n (inc f) (K x))))) (pred 3)) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((fn [f x] (extract ((pred 3) (inc f) (K x)))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f ((fn [x] (extract ((pred 3) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)) (K x)))) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (extract ((pred 3) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)) (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f ((fn [k] (k I)) ((pred 3) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)) (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (((pred 3) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)) (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) I))))
(fn [f x1] (f (f ((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) 3) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)) (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) I))))
(fn [f x1] (f (f (((fn [f x] (extract (3 (inc f) (K x)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)) (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) I))))
(fn [f x1] (f (f (((fn [x] (extract (3 (inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K x)))) (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) I))))
(fn [f x1] (f (f ((extract (3 (inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))))) I))))
(fn [f x1] (f (f (((fn [k] (k I)) (3 (inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))))) I))))
(fn [f x1] (f (f (((3 (inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))) I) I))))
(fn [f x1] (f (f ((((fn [f x] (f (f (f x)))) (inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))) I) I))))
(fn [f x1] (f (f ((((fn [x] ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) x)))) (K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))) I) I))))
(fn [f x1] (f (f ((((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))) I) I))))
(fn [f x1] (f (f (((((fn [f] (fn [g h] (h (g f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))) I) I))))
(fn [f x1] (f (f ((((fn [g h] (h (g (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))) I) I))))
(fn [f x1] (f (f (((fn [h] (h (((inc (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))) I) I))))
(fn [f x1] (f (f ((I (((inc (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))) I))))
(fn [f x1] (f (f (((fn [x] x) (((inc (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))) I))))
(fn [f x1] (f (f ((((inc (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) I))))
(fn [f x1] (f (f (((((fn [f] (fn [g h] (h (g f)))) (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) I))))
(fn [f x1] (f (f ((((fn [g h] (h (g (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))) ((inc (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) I))))
(fn [f x1] (f (f (((fn [h] (h (((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))) (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) I))))
(fn [f x1] (f (f (((inc ((((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred 3)))) f)) (((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))) (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)))) I))))
(fn [f x1] (f (f ((((fn [f] (fn [g h] (h (g f)))) ((((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred 3)))) f)) (((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))) (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)))) I))))
(fn [f x1] (f (f (((fn [g h] (h (g ((((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred 3)))) f)))) (((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))) (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)))) I))))
(fn [f x1] (f (f ((fn [h] (h ((((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))) (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) ((((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred 3)))) f)))) I))))
(fn [f x1] (f (f (I ((((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))) (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) ((((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((fn [x] x) ((((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))) (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) ((((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))) (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) ((((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (f (((((fn [f] (fn [g h] (h (g f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))) (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) ((((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (f ((((fn [g h] (h (g (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))) (K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))) (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) ((((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (f (((fn [h] (h ((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))) (inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))) ((((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (f (((inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)) ((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))) ((((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (f ((((fn [f] (fn [g h] (h (g f)))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)) ((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))) ((((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (f (((fn [g h] (h (g ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)))) ((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))) ((((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (f ((fn [h] (h (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)))) ((((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred 3)))) f)))))
(fn [f x1] (f (f (((((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred 3)))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((fact_ ((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7))))) (pred (pred (pred 3)))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((fn [f n] ((zero? n) 1 (* n (f (pred n))))) ((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7))))) (pred (pred (pred 3)))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((fn [n] ((zero? n) 1 (* n (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred n))))) (pred (pred (pred 3)))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((zero? (pred (pred (pred 3)))) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((fn [n] (n (K false) true)) (pred (pred (pred 3)))) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((pred (pred (pred 3))) (K false) true) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) (pred (pred 3))) (K false) true) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((fn [f x] (extract ((pred (pred 3)) (inc f) (K x)))) (K false) true) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((fn [x] (extract ((pred (pred 3)) (inc (K false)) (K x)))) true) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((extract ((pred (pred 3)) (inc (K false)) (K true))) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((fn [k] (k I)) ((pred (pred 3)) (inc (K false)) (K true))) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((((pred (pred 3)) (inc (K false)) (K true)) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) (pred 3)) (inc (K false)) (K true)) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((((fn [f x] (extract ((pred 3) (inc f) (K x)))) (inc (K false)) (K true)) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((((fn [x] (extract ((pred 3) (inc (inc (K false))) (K x)))) (K true)) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((extract ((pred 3) (inc (inc (K false))) (K (K true)))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((((fn [k] (k I)) ((pred 3) (inc (inc (K false))) (K (K true)))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((((pred 3) (inc (inc (K false))) (K (K true))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) 3) (inc (inc (K false))) (K (K true))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((((fn [f x] (extract (3 (inc f) (K x)))) (inc (inc (K false))) (K (K true))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((((fn [x] (extract (3 (inc (inc (inc (K false)))) (K x)))) (K (K true))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((((extract (3 (inc (inc (inc (K false)))) (K (K (K true))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((((fn [k] (k I)) (3 (inc (inc (inc (K false)))) (K (K (K true))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((((3 (inc (inc (inc (K false)))) (K (K (K true)))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((((((fn [f x] (f (f (f x)))) (inc (inc (inc (K false)))) (K (K (K true)))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((((((fn [x] ((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) x)))) (K (K (K true)))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((((((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true)))))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((((((fn [f] (fn [g h] (h (g f)))) (inc (inc (K false)))) ((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true)))))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((((((fn [g h] (h (g (inc (inc (K false)))))) ((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true)))))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((((fn [h] (h (((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false)))))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((((I (((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((((fn [x] x) (((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((((((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false)))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((((((fn [f] (fn [g h] (h (g f)))) (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false)))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((((((fn [g h] (h (g (inc (inc (K false)))))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false)))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((((fn [h] (h (((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))))) (inc (inc (K false)))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((((inc (inc (K false))) (((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((((((fn [f] (fn [g h] (h (g f)))) (inc (K false))) (((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((((fn [g h] (h (g (inc (K false))))) (((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((((fn [h] (h ((((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((I ((((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((((fn [x] x) ((((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((((((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((((((fn [f] (fn [g h] (h (g f)))) (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((((((fn [g h] (h (g (inc (inc (K false)))))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((((fn [h] (h ((K (K (K true))) (inc (inc (K false)))))) (inc (inc (K false)))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((((inc (inc (K false))) ((K (K (K true))) (inc (inc (K false))))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((((((fn [f] (fn [g h] (h (g f)))) (inc (K false))) ((K (K (K true))) (inc (inc (K false))))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((((fn [g h] (h (g (inc (K false))))) ((K (K (K true))) (inc (inc (K false))))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((((fn [h] (h (((K (K (K true))) (inc (inc (K false)))) (inc (K false))))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((((inc (K false)) (((K (K (K true))) (inc (inc (K false)))) (inc (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((((fn [f] (fn [g h] (h (g f)))) (K false)) (((K (K (K true))) (inc (inc (K false)))) (inc (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((((fn [g h] (h (g (K false)))) (((K (K (K true))) (inc (inc (K false)))) (inc (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((fn [h] (h ((((K (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((I ((((K (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false))) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((fn [x] x) ((((K (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false))) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((((K (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((((((fn [x] (fn [u] x)) (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((((fn [u] (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((((K (K true)) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((((fn [x] (fn [u] x)) (K true)) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((((fn [u] (K true)) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((K true) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((((fn [x] (fn [u] x)) true) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((((fn [u] true) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((true 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((fn [a b] a) 1 (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((((fn [b] 1) (* (pred (pred (pred 3))) (((fn [x7] (fact_ (x7 x7))) (fn [x7] (fact_ (x7 x7)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((1 f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (((fn [f x] (f x)) f) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f ((fn [x] (f x)) (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (f (((K (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (f ((((fn [x] (fn [u] x)) (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (f (((fn [u] (K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (f ((K (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (f (((fn [x] (fn [u] x)) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (f ((fn [u] (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (f (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (f ((((fn [f] (fn [g h] (h (g f)))) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (f (((fn [g h] (h (g ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (f ((fn [h] (h ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f))))))
(fn [f x1] (f (f (f (((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f ((((fact_ ((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4))))) (pred (pred 3))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (((((fn [f n] ((zero? n) 1 (* n (f (pred n))))) ((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4))))) (pred (pred 3))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f ((((fn [n] ((zero? n) 1 (* n (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred n))))) (pred (pred 3))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f ((((zero? (pred (pred 3))) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (((((fn [n] (n (K false) true)) (pred (pred 3))) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (((((pred (pred 3)) (K false) true) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f ((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) (pred 3)) (K false) true) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (((((fn [f x] (extract ((pred 3) (inc f) (K x)))) (K false) true) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (((((fn [x] (extract ((pred 3) (inc (K false)) (K x)))) true) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f ((((extract ((pred 3) (inc (K false)) (K true))) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (((((fn [k] (k I)) ((pred 3) (inc (K false)) (K true))) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f ((((((pred 3) (inc (K false)) (K true)) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) 3) (inc (K false)) (K true)) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f ((((((fn [f x] (extract (3 (inc f) (K x)))) (inc (K false)) (K true)) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f ((((((fn [x] (extract (3 (inc (inc (K false))) (K x)))) (K true)) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (((((extract (3 (inc (inc (K false))) (K (K true)))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f ((((((fn [k] (k I)) (3 (inc (inc (K false))) (K (K true)))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f ((((((3 (inc (inc (K false))) (K (K true))) I) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (((((((fn [f x] (f (f (f x)))) (inc (inc (K false))) (K (K true))) I) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (((((((fn [x] ((inc (inc (K false))) ((inc (inc (K false))) ((inc (inc (K false))) x)))) (K (K true))) I) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (((((((inc (inc (K false))) ((inc (inc (K false))) ((inc (inc (K false))) (K (K true))))) I) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f ((((((((fn [f] (fn [g h] (h (g f)))) (inc (K false))) ((inc (inc (K false))) ((inc (inc (K false))) (K (K true))))) I) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (((((((fn [g h] (h (g (inc (K false))))) ((inc (inc (K false))) ((inc (inc (K false))) (K (K true))))) I) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f ((((((fn [h] (h (((inc (inc (K false))) ((inc (inc (K false))) (K (K true)))) (inc (K false))))) I) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (((((I (((inc (inc (K false))) ((inc (inc (K false))) (K (K true)))) (inc (K false)))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f ((((((fn [x] x) (((inc (inc (K false))) ((inc (inc (K false))) (K (K true)))) (inc (K false)))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (((((((inc (inc (K false))) ((inc (inc (K false))) (K (K true)))) (inc (K false))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f ((((((((fn [f] (fn [g h] (h (g f)))) (inc (K false))) ((inc (inc (K false))) (K (K true)))) (inc (K false))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (((((((fn [g h] (h (g (inc (K false))))) ((inc (inc (K false))) (K (K true)))) (inc (K false))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f ((((((fn [h] (h (((inc (inc (K false))) (K (K true))) (inc (K false))))) (inc (K false))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f ((((((inc (K false)) (((inc (inc (K false))) (K (K true))) (inc (K false)))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (((((((fn [f] (fn [g h] (h (g f)))) (K false)) (((inc (inc (K false))) (K (K true))) (inc (K false)))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f ((((((fn [g h] (h (g (K false)))) (((inc (inc (K false))) (K (K true))) (inc (K false)))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (((((fn [h] (h ((((inc (inc (K false))) (K (K true))) (inc (K false))) (K false)))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f ((((I ((((inc (inc (K false))) (K (K true))) (inc (K false))) (K false))) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (((((fn [x] x) ((((inc (inc (K false))) (K (K true))) (inc (K false))) (K false))) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (((((((inc (inc (K false))) (K (K true))) (inc (K false))) (K false)) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f ((((((((fn [f] (fn [g h] (h (g f)))) (inc (K false))) (K (K true))) (inc (K false))) (K false)) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (((((((fn [g h] (h (g (inc (K false))))) (K (K true))) (inc (K false))) (K false)) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f ((((((fn [h] (h ((K (K true)) (inc (K false))))) (inc (K false))) (K false)) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f ((((((inc (K false)) ((K (K true)) (inc (K false)))) (K false)) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (((((((fn [f] (fn [g h] (h (g f)))) (K false)) ((K (K true)) (inc (K false)))) (K false)) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f ((((((fn [g h] (h (g (K false)))) ((K (K true)) (inc (K false)))) (K false)) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (((((fn [h] (h (((K (K true)) (inc (K false))) (K false)))) (K false)) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (((((K false) (((K (K true)) (inc (K false))) (K false))) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f ((((((fn [x] (fn [u] x)) false) (((K (K true)) (inc (K false))) (K false))) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (((((fn [u] false) (((K (K true)) (inc (K false))) (K false))) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (((false 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f ((((fn [a b] b) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f ((((fn [b] b) (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (((* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f ((((fn [m n] (fn [f x] (m (n f) x))) (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f ((((fn [n] (fn [f x] ((pred (pred 3)) (n f) x))) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3))))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (((fn [f x] ((pred (pred 3)) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f) x)) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f ((fn [x] ((pred (pred 3)) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f) x)) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f ((pred (pred 3)) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (((fn [n] (fn [f x] (extract (n (inc f) (K x))))) (pred 3)) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f ((fn [f x] (extract ((pred 3) (inc f) (K x)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f ((fn [x] (extract ((pred 3) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)) (K x)))) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (extract ((pred 3) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)) (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f ((fn [k] (k I)) ((pred 3) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)) (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (((pred 3) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)) (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) I)))))
(fn [f x1] (f (f (f ((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) 3) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)) (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) I)))))
(fn [f x1] (f (f (f (((fn [f x] (extract (3 (inc f) (K x)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)) (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) I)))))
(fn [f x1] (f (f (f (((fn [x] (extract (3 (inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K x)))) (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) I)))))
(fn [f x1] (f (f (f ((extract (3 (inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))) I)))))
(fn [f x1] (f (f (f (((fn [k] (k I)) (3 (inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))) I)))))
(fn [f x1] (f (f (f (((3 (inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))) I) I)))))
(fn [f x1] (f (f (f ((((fn [f x] (f (f (f x)))) (inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))) I) I)))))
(fn [f x1] (f (f (f ((((fn [x] ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) x)))) (K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))) I) I)))))
(fn [f x1] (f (f (f ((((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))) I) I)))))
(fn [f x1] (f (f (f (((((fn [f] (fn [g h] (h (g f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))) I) I)))))
(fn [f x1] (f (f (f ((((fn [g h] (h (g (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))))) ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))) I) I)))))
(fn [f x1] (f (f (f (((fn [h] (h (((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))))) I) I)))))
(fn [f x1] (f (f (f ((I (((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))) I)))))
(fn [f x1] (f (f (f (((fn [x] x) (((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))) I)))))
(fn [f x1] (f (f (f ((((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) I)))))
(fn [f x1] (f (f (f (((((fn [f] (fn [g h] (h (g f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) I)))))
(fn [f x1] (f (f (f ((((fn [g h] (h (g (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) I)))))
(fn [f x1] (f (f (f (((fn [h] (h (((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) I)))))
(fn [f x1] (f (f (f (((inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)) (((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))) I)))))
(fn [f x1] (f (f (f ((((fn [f] (fn [g h] (h (g f)))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)) (((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))) I)))))
(fn [f x1] (f (f (f (((fn [g h] (h (g ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)))) (((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))) I)))))
(fn [f x1] (f (f (f ((fn [h] (h ((((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)))) I)))))
(fn [f x1] (f (f (f (I ((((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((fn [x] x) ((((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (f (((((fn [f] (fn [g h] (h (g f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (f ((((fn [g h] (h (g (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))))) (K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (f (((fn [h] (h ((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (f (((inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)) ((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (f ((((fn [f] (fn [g h] (h (g f)))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)) ((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (f (((fn [g h] (h (g ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))) ((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (f ((fn [h] (h (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))
(fn [f x1] (f (f (f (((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((fact_ ((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6))))) (pred (pred (pred 3)))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((fn [f n] ((zero? n) 1 (* n (f (pred n))))) ((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6))))) (pred (pred (pred 3)))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((fn [n] ((zero? n) 1 (* n (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred n))))) (pred (pred (pred 3)))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((zero? (pred (pred (pred 3)))) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((fn [n] (n (K false) true)) (pred (pred (pred 3)))) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((pred (pred (pred 3))) (K false) true) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) (pred (pred 3))) (K false) true) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((fn [f x] (extract ((pred (pred 3)) (inc f) (K x)))) (K false) true) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((fn [x] (extract ((pred (pred 3)) (inc (K false)) (K x)))) true) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((extract ((pred (pred 3)) (inc (K false)) (K true))) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((fn [k] (k I)) ((pred (pred 3)) (inc (K false)) (K true))) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((((pred (pred 3)) (inc (K false)) (K true)) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) (pred 3)) (inc (K false)) (K true)) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((((fn [f x] (extract ((pred 3) (inc f) (K x)))) (inc (K false)) (K true)) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((((fn [x] (extract ((pred 3) (inc (inc (K false))) (K x)))) (K true)) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((extract ((pred 3) (inc (inc (K false))) (K (K true)))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((((fn [k] (k I)) ((pred 3) (inc (inc (K false))) (K (K true)))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((((pred 3) (inc (inc (K false))) (K (K true))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) 3) (inc (inc (K false))) (K (K true))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((((fn [f x] (extract (3 (inc f) (K x)))) (inc (inc (K false))) (K (K true))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((((fn [x] (extract (3 (inc (inc (inc (K false)))) (K x)))) (K (K true))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((((extract (3 (inc (inc (inc (K false)))) (K (K (K true))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((((fn [k] (k I)) (3 (inc (inc (inc (K false)))) (K (K (K true))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((((3 (inc (inc (inc (K false)))) (K (K (K true)))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((((((fn [f x] (f (f (f x)))) (inc (inc (inc (K false)))) (K (K (K true)))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((((((fn [x] ((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) x)))) (K (K (K true)))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((((((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true)))))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((((((fn [f] (fn [g h] (h (g f)))) (inc (inc (K false)))) ((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true)))))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((((((fn [g h] (h (g (inc (inc (K false)))))) ((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true)))))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((((fn [h] (h (((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false)))))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((((I (((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((((fn [x] x) (((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((((((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false)))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((((((fn [f] (fn [g h] (h (g f)))) (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false)))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((((((fn [g h] (h (g (inc (inc (K false)))))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false)))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((((fn [h] (h (((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))))) (inc (inc (K false)))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((((inc (inc (K false))) (((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((((((fn [f] (fn [g h] (h (g f)))) (inc (K false))) (((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((((fn [g h] (h (g (inc (K false))))) (((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((((fn [h] (h ((((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((I ((((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((((fn [x] x) ((((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((((((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((((((fn [f] (fn [g h] (h (g f)))) (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((((((fn [g h] (h (g (inc (inc (K false)))))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((((fn [h] (h ((K (K (K true))) (inc (inc (K false)))))) (inc (inc (K false)))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((((inc (inc (K false))) ((K (K (K true))) (inc (inc (K false))))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((((((fn [f] (fn [g h] (h (g f)))) (inc (K false))) ((K (K (K true))) (inc (inc (K false))))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((((fn [g h] (h (g (inc (K false))))) ((K (K (K true))) (inc (inc (K false))))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((((fn [h] (h (((K (K (K true))) (inc (inc (K false)))) (inc (K false))))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((((inc (K false)) (((K (K (K true))) (inc (inc (K false)))) (inc (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((((fn [f] (fn [g h] (h (g f)))) (K false)) (((K (K (K true))) (inc (inc (K false)))) (inc (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((((fn [g h] (h (g (K false)))) (((K (K (K true))) (inc (inc (K false)))) (inc (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((fn [h] (h ((((K (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((I ((((K (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false))) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((fn [x] x) ((((K (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false))) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((((K (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((((((fn [x] (fn [u] x)) (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((((fn [u] (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((((K (K true)) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((((fn [x] (fn [u] x)) (K true)) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((((fn [u] (K true)) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((K true) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((((fn [x] (fn [u] x)) true) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((((fn [u] true) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((true 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((fn [a b] a) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((((fn [b] 1) (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((1 f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (((fn [f x] (f x)) f) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f ((fn [x] (f x)) (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (f (((K (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (f ((((fn [x] (fn [u] x)) (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (f (((fn [u] (K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (f ((K ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (f (((fn [x] (fn [u] x)) ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (f ((fn [u] ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (f ((K (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (f (((fn [x] (fn [u] x)) (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (f ((fn [u] (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (f (((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred 3)) f) x1))))))
(fn [f x1] (f (f (f (f ((((fact_ ((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2))))) (pred 3)) f) x1))))))
(fn [f x1] (f (f (f (f (((((fn [f n] ((zero? n) 1 (* n (f (pred n))))) ((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2))))) (pred 3)) f) x1))))))
(fn [f x1] (f (f (f (f ((((fn [n] ((zero? n) 1 (* n (((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred n))))) (pred 3)) f) x1))))))
(fn [f x1] (f (f (f (f ((((zero? (pred 3)) 1 (* (pred 3) (((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))))) f) x1))))))
(fn [f x1] (f (f (f (f (((((fn [n] (n (K false) true)) (pred 3)) 1 (* (pred 3) (((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))))) f) x1))))))
(fn [f x1] (f (f (f (f (((((pred 3) (K false) true) 1 (* (pred 3) (((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))))) f) x1))))))
(fn [f x1] (f (f (f (f ((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) 3) (K false) true) 1 (* (pred 3) (((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))))) f) x1))))))
(fn [f x1] (f (f (f (f (((((fn [f x] (extract (3 (inc f) (K x)))) (K false) true) 1 (* (pred 3) (((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))))) f) x1))))))
(fn [f x1] (f (f (f (f (((((fn [x] (extract (3 (inc (K false)) (K x)))) true) 1 (* (pred 3) (((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))))) f) x1))))))
(fn [f x1] (f (f (f (f ((((extract (3 (inc (K false)) (K true))) 1 (* (pred 3) (((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))))) f) x1))))))
(fn [f x1] (f (f (f (f (((((fn [k] (k I)) (3 (inc (K false)) (K true))) 1 (* (pred 3) (((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))))) f) x1))))))
(fn [f x1] (f (f (f (f (((((3 (inc (K false)) (K true)) I) 1 (* (pred 3) (((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))))) f) x1))))))
(fn [f x1] (f (f (f (f ((((((fn [f x] (f (f (f x)))) (inc (K false)) (K true)) I) 1 (* (pred 3) (((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))))) f) x1))))))
(fn [f x1] (f (f (f (f ((((((fn [x] ((inc (K false)) ((inc (K false)) ((inc (K false)) x)))) (K true)) I) 1 (* (pred 3) (((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))))) f) x1))))))
(fn [f x1] (f (f (f (f ((((((inc (K false)) ((inc (K false)) ((inc (K false)) (K true)))) I) 1 (* (pred 3) (((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))))) f) x1))))))
(fn [f x1] (f (f (f (f (((((((fn [f] (fn [g h] (h (g f)))) (K false)) ((inc (K false)) ((inc (K false)) (K true)))) I) 1 (* (pred 3) (((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))))) f) x1))))))
(fn [f x1] (f (f (f (f ((((((fn [g h] (h (g (K false)))) ((inc (K false)) ((inc (K false)) (K true)))) I) 1 (* (pred 3) (((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))))) f) x1))))))
(fn [f x1] (f (f (f (f (((((fn [h] (h (((inc (K false)) ((inc (K false)) (K true))) (K false)))) I) 1 (* (pred 3) (((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))))) f) x1))))))
(fn [f x1] (f (f (f (f ((((I (((inc (K false)) ((inc (K false)) (K true))) (K false))) 1 (* (pred 3) (((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))))) f) x1))))))
(fn [f x1] (f (f (f (f (((((fn [x] x) (((inc (K false)) ((inc (K false)) (K true))) (K false))) 1 (* (pred 3) (((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))))) f) x1))))))
(fn [f x1] (f (f (f (f ((((((inc (K false)) ((inc (K false)) (K true))) (K false)) 1 (* (pred 3) (((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))))) f) x1))))))
(fn [f x1] (f (f (f (f (((((((fn [f] (fn [g h] (h (g f)))) (K false)) ((inc (K false)) (K true))) (K false)) 1 (* (pred 3) (((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))))) f) x1))))))
(fn [f x1] (f (f (f (f ((((((fn [g h] (h (g (K false)))) ((inc (K false)) (K true))) (K false)) 1 (* (pred 3) (((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))))) f) x1))))))
(fn [f x1] (f (f (f (f (((((fn [h] (h (((inc (K false)) (K true)) (K false)))) (K false)) 1 (* (pred 3) (((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))))) f) x1))))))
(fn [f x1] (f (f (f (f (((((K false) (((inc (K false)) (K true)) (K false))) 1 (* (pred 3) (((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))))) f) x1))))))
(fn [f x1] (f (f (f (f ((((((fn [x] (fn [u] x)) false) (((inc (K false)) (K true)) (K false))) 1 (* (pred 3) (((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))))) f) x1))))))
(fn [f x1] (f (f (f (f (((((fn [u] false) (((inc (K false)) (K true)) (K false))) 1 (* (pred 3) (((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))))) f) x1))))))
(fn [f x1] (f (f (f (f (((false 1 (* (pred 3) (((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))))) f) x1))))))
(fn [f x1] (f (f (f (f ((((fn [a b] b) 1 (* (pred 3) (((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))))) f) x1))))))
(fn [f x1] (f (f (f (f ((((fn [b] b) (* (pred 3) (((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))))) f) x1))))))
(fn [f x1] (f (f (f (f (((* (pred 3) (((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3)))) f) x1))))))
(fn [f x1] (f (f (f (f ((((fn [m n] (fn [f x] (m (n f) x))) (pred 3) (((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3)))) f) x1))))))
(fn [f x1] (f (f (f (f ((((fn [n] (fn [f x] ((pred 3) (n f) x))) (((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3)))) f) x1))))))
(fn [f x1] (f (f (f (f (((fn [f x] ((pred 3) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f) x)) f) x1))))))
(fn [f x1] (f (f (f (f ((fn [x] ((pred 3) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f) x)) x1))))))
(fn [f x1] (f (f (f (f ((pred 3) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f) x1))))))
(fn [f x1] (f (f (f (f (((fn [n] (fn [f x] (extract (n (inc f) (K x))))) 3) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f) x1))))))
(fn [f x1] (f (f (f (f ((fn [f x] (extract (3 (inc f) (K x)))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f) x1))))))
(fn [f x1] (f (f (f (f ((fn [x] (extract (3 (inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x)))) x1))))))
(fn [f x1] (f (f (f (f (extract (3 (inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1))))))))
(fn [f x1] (f (f (f (f ((fn [k] (k I)) (3 (inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1))))))))
(fn [f x1] (f (f (f (f ((3 (inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) I))))))
(fn [f x1] (f (f (f (f (((fn [f x] (f (f (f x)))) (inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) I))))))
(fn [f x1] (f (f (f (f (((fn [x] ((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) ((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) ((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) x)))) (K x1)) I))))))
(fn [f x1] (f (f (f (f (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) ((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) ((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)))) I))))))
(fn [f x1] (f (f (f (f ((((fn [f] (fn [g h] (h (g f)))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) ((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) ((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)))) I))))))
(fn [f x1] (f (f (f (f (((fn [g h] (h (g ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) ((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) ((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)))) I))))))
(fn [f x1] (f (f (f (f ((fn [h] (h (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) ((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) I))))))
(fn [f x1] (f (f (f (f (I (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) ((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((fn [x] x) (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) ((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) ((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (f ((((fn [f] (fn [g h] (h (g f)))) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) ((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (f (((fn [g h] (h (g ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) ((inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)) (K x1))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (f ((fn [h] (h (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))
(fn [f x1] (f (f (f (f (((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred 3))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((((fact_ ((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4))))) (pred (pred 3))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (((((fn [f n] ((zero? n) 1 (* n (f (pred n))))) ((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4))))) (pred (pred 3))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((((fn [n] ((zero? n) 1 (* n (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred n))))) (pred (pred 3))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((((zero? (pred (pred 3))) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (((((fn [n] (n (K false) true)) (pred (pred 3))) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (((((pred (pred 3)) (K false) true) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) (pred 3)) (K false) true) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (((((fn [f x] (extract ((pred 3) (inc f) (K x)))) (K false) true) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (((((fn [x] (extract ((pred 3) (inc (K false)) (K x)))) true) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((((extract ((pred 3) (inc (K false)) (K true))) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (((((fn [k] (k I)) ((pred 3) (inc (K false)) (K true))) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((((((pred 3) (inc (K false)) (K true)) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) 3) (inc (K false)) (K true)) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((((((fn [f x] (extract (3 (inc f) (K x)))) (inc (K false)) (K true)) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((((((fn [x] (extract (3 (inc (inc (K false))) (K x)))) (K true)) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (((((extract (3 (inc (inc (K false))) (K (K true)))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((((((fn [k] (k I)) (3 (inc (inc (K false))) (K (K true)))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((((((3 (inc (inc (K false))) (K (K true))) I) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (((((((fn [f x] (f (f (f x)))) (inc (inc (K false))) (K (K true))) I) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (((((((fn [x] ((inc (inc (K false))) ((inc (inc (K false))) ((inc (inc (K false))) x)))) (K (K true))) I) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (((((((inc (inc (K false))) ((inc (inc (K false))) ((inc (inc (K false))) (K (K true))))) I) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((((((((fn [f] (fn [g h] (h (g f)))) (inc (K false))) ((inc (inc (K false))) ((inc (inc (K false))) (K (K true))))) I) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (((((((fn [g h] (h (g (inc (K false))))) ((inc (inc (K false))) ((inc (inc (K false))) (K (K true))))) I) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((((((fn [h] (h (((inc (inc (K false))) ((inc (inc (K false))) (K (K true)))) (inc (K false))))) I) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (((((I (((inc (inc (K false))) ((inc (inc (K false))) (K (K true)))) (inc (K false)))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((((((fn [x] x) (((inc (inc (K false))) ((inc (inc (K false))) (K (K true)))) (inc (K false)))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (((((((inc (inc (K false))) ((inc (inc (K false))) (K (K true)))) (inc (K false))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((((((((fn [f] (fn [g h] (h (g f)))) (inc (K false))) ((inc (inc (K false))) (K (K true)))) (inc (K false))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (((((((fn [g h] (h (g (inc (K false))))) ((inc (inc (K false))) (K (K true)))) (inc (K false))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((((((fn [h] (h (((inc (inc (K false))) (K (K true))) (inc (K false))))) (inc (K false))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((((((inc (K false)) (((inc (inc (K false))) (K (K true))) (inc (K false)))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (((((((fn [f] (fn [g h] (h (g f)))) (K false)) (((inc (inc (K false))) (K (K true))) (inc (K false)))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((((((fn [g h] (h (g (K false)))) (((inc (inc (K false))) (K (K true))) (inc (K false)))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (((((fn [h] (h ((((inc (inc (K false))) (K (K true))) (inc (K false))) (K false)))) I) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((((I ((((inc (inc (K false))) (K (K true))) (inc (K false))) (K false))) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (((((fn [x] x) ((((inc (inc (K false))) (K (K true))) (inc (K false))) (K false))) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (((((((inc (inc (K false))) (K (K true))) (inc (K false))) (K false)) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((((((((fn [f] (fn [g h] (h (g f)))) (inc (K false))) (K (K true))) (inc (K false))) (K false)) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (((((((fn [g h] (h (g (inc (K false))))) (K (K true))) (inc (K false))) (K false)) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((((((fn [h] (h ((K (K true)) (inc (K false))))) (inc (K false))) (K false)) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((((((inc (K false)) ((K (K true)) (inc (K false)))) (K false)) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (((((((fn [f] (fn [g h] (h (g f)))) (K false)) ((K (K true)) (inc (K false)))) (K false)) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((((((fn [g h] (h (g (K false)))) ((K (K true)) (inc (K false)))) (K false)) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (((((fn [h] (h (((K (K true)) (inc (K false))) (K false)))) (K false)) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (((((K false) (((K (K true)) (inc (K false))) (K false))) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((((((fn [x] (fn [u] x)) false) (((K (K true)) (inc (K false))) (K false))) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (((((fn [u] false) (((K (K true)) (inc (K false))) (K false))) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (((false 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((((fn [a b] b) 1 (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((((fn [b] b) (* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (((* (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((((fn [m n] (fn [f x] (m (n f) x))) (pred (pred 3)) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((((fn [n] (fn [f x] ((pred (pred 3)) (n f) x))) (((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3))))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (((fn [f x] ((pred (pred 3)) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f) x)) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((fn [x] ((pred (pred 3)) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f) x)) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((pred (pred 3)) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (((fn [n] (fn [f x] (extract (n (inc f) (K x))))) (pred 3)) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((fn [f x] (extract ((pred 3) (inc f) (K x)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f ((fn [x] (extract ((pred 3) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)) (K x)))) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (extract ((pred 3) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)) (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))))
(fn [f x1] (f (f (f (f ((fn [k] (k I)) ((pred 3) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)) (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))))
(fn [f x1] (f (f (f (f (((pred 3) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)) (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) I))))))
(fn [f x1] (f (f (f (f ((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) 3) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)) (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) I))))))
(fn [f x1] (f (f (f (f (((fn [f x] (extract (3 (inc f) (K x)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)) (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) I))))))
(fn [f x1] (f (f (f (f (((fn [x] (extract (3 (inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K x)))) (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) I))))))
(fn [f x1] (f (f (f (f ((extract (3 (inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))) I))))))
(fn [f x1] (f (f (f (f (((fn [k] (k I)) (3 (inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))) I))))))
(fn [f x1] (f (f (f (f (((3 (inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))) I) I))))))
(fn [f x1] (f (f (f (f ((((fn [f x] (f (f (f x)))) (inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))) I) I))))))
(fn [f x1] (f (f (f (f ((((fn [x] ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) x)))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))) I) I))))))
(fn [f x1] (f (f (f (f ((((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))) I) I))))))
(fn [f x1] (f (f (f (f (((((fn [f] (fn [g h] (h (g f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))) I) I))))))
(fn [f x1] (f (f (f (f ((((fn [g h] (h (g (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))))) ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))) I) I))))))
(fn [f x1] (f (f (f (f (((fn [h] (h (((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))))) I) I))))))
(fn [f x1] (f (f (f (f ((I (((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))) I))))))
(fn [f x1] (f (f (f (f (((fn [x] x) (((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))) I))))))
(fn [f x1] (f (f (f (f ((((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) I))))))
(fn [f x1] (f (f (f (f (((((fn [f] (fn [g h] (h (g f)))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) I))))))
(fn [f x1] (f (f (f (f ((((fn [g h] (h (g (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))) ((inc (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) I))))))
(fn [f x1] (f (f (f (f (((fn [h] (h (((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) I))))))
(fn [f x1] (f (f (f (f (((inc ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)) (((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))) I))))))
(fn [f x1] (f (f (f (f ((((fn [f] (fn [g h] (h (g f)))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)) (((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))) I))))))
(fn [f x1] (f (f (f (f (((fn [g h] (h (g ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)))) (((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))) I))))))
(fn [f x1] (f (f (f (f ((fn [h] (h ((((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)))) I))))))
(fn [f x1] (f (f (f (f (I ((((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((fn [x] x) ((((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (f (((((fn [f] (fn [g h] (h (g f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (f ((((fn [g h] (h (g (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))))) (K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (f (((fn [h] (h ((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))))) (inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (f (((inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)) ((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (f ((((fn [f] (fn [g h] (h (g f)))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)) ((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (f (((fn [g h] (h (g ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))) ((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (f ((fn [h] (h (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))) ((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f)))))))
(fn [f x1] (f (f (f (f (((((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred 3)))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((fact_ ((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6))))) (pred (pred (pred 3)))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((fn [f n] ((zero? n) 1 (* n (f (pred n))))) ((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6))))) (pred (pred (pred 3)))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((fn [n] ((zero? n) 1 (* n (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred n))))) (pred (pred (pred 3)))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((zero? (pred (pred (pred 3)))) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((fn [n] (n (K false) true)) (pred (pred (pred 3)))) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((pred (pred (pred 3))) (K false) true) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) (pred (pred 3))) (K false) true) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((fn [f x] (extract ((pred (pred 3)) (inc f) (K x)))) (K false) true) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((fn [x] (extract ((pred (pred 3)) (inc (K false)) (K x)))) true) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((extract ((pred (pred 3)) (inc (K false)) (K true))) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((fn [k] (k I)) ((pred (pred 3)) (inc (K false)) (K true))) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((((pred (pred 3)) (inc (K false)) (K true)) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) (pred 3)) (inc (K false)) (K true)) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((((fn [f x] (extract ((pred 3) (inc f) (K x)))) (inc (K false)) (K true)) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((((fn [x] (extract ((pred 3) (inc (inc (K false))) (K x)))) (K true)) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((extract ((pred 3) (inc (inc (K false))) (K (K true)))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((((fn [k] (k I)) ((pred 3) (inc (inc (K false))) (K (K true)))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((((pred 3) (inc (inc (K false))) (K (K true))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) 3) (inc (inc (K false))) (K (K true))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((((fn [f x] (extract (3 (inc f) (K x)))) (inc (inc (K false))) (K (K true))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((((fn [x] (extract (3 (inc (inc (inc (K false)))) (K x)))) (K (K true))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((((extract (3 (inc (inc (inc (K false)))) (K (K (K true))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((((fn [k] (k I)) (3 (inc (inc (inc (K false)))) (K (K (K true))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((((3 (inc (inc (inc (K false)))) (K (K (K true)))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((((((fn [f x] (f (f (f x)))) (inc (inc (inc (K false)))) (K (K (K true)))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((((((fn [x] ((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) x)))) (K (K (K true)))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((((((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true)))))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((((((fn [f] (fn [g h] (h (g f)))) (inc (inc (K false)))) ((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true)))))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((((((fn [g h] (h (g (inc (inc (K false)))))) ((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true)))))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((((fn [h] (h (((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false)))))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((((I (((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((((fn [x] x) (((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((((((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false)))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((((((fn [f] (fn [g h] (h (g f)))) (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false)))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((((((fn [g h] (h (g (inc (inc (K false)))))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false)))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((((fn [h] (h (((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))))) (inc (inc (K false)))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((((inc (inc (K false))) (((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((((((fn [f] (fn [g h] (h (g f)))) (inc (K false))) (((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((((fn [g h] (h (g (inc (K false))))) (((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((((fn [h] (h ((((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((I ((((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((((fn [x] x) ((((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((((((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((((((fn [f] (fn [g h] (h (g f)))) (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((((((fn [g h] (h (g (inc (inc (K false)))))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((((fn [h] (h ((K (K (K true))) (inc (inc (K false)))))) (inc (inc (K false)))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((((inc (inc (K false))) ((K (K (K true))) (inc (inc (K false))))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((((((fn [f] (fn [g h] (h (g f)))) (inc (K false))) ((K (K (K true))) (inc (inc (K false))))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((((fn [g h] (h (g (inc (K false))))) ((K (K (K true))) (inc (inc (K false))))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((((fn [h] (h (((K (K (K true))) (inc (inc (K false)))) (inc (K false))))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((((inc (K false)) (((K (K (K true))) (inc (inc (K false)))) (inc (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((((fn [f] (fn [g h] (h (g f)))) (K false)) (((K (K (K true))) (inc (inc (K false)))) (inc (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((((fn [g h] (h (g (K false)))) (((K (K (K true))) (inc (inc (K false)))) (inc (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((fn [h] (h ((((K (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((I ((((K (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false))) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((fn [x] x) ((((K (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false))) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((((K (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((((((fn [x] (fn [u] x)) (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((((fn [u] (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((((K (K true)) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((((fn [x] (fn [u] x)) (K true)) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((((fn [u] (K true)) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((K true) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((((fn [x] (fn [u] x)) true) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((((fn [u] true) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((true 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((fn [a b] a) 1 (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((((fn [b] 1) (* (pred (pred (pred 3))) (((fn [x6] (fact_ (x6 x6))) (fn [x6] (fact_ (x6 x6)))) (pred (pred (pred (pred 3))))))) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((1 f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (((fn [f x] (f x)) f) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f ((fn [x] (f x)) (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (f (((K (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (f ((((fn [x] (fn [u] x)) (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (f (((fn [u] (K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (f ((K (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (f (((fn [x] (fn [u] x)) (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (f ((fn [u] (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (f (((inc ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (f ((((fn [f] (fn [g h] (h (g f)))) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (f (((fn [g h] (h (g ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (K x1)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (f ((fn [h] (h ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f))))))))
(fn [f x1] (f (f (f (f (f (((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred 3))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((fact_ ((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3))))) (pred (pred 3))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((fn [f n] ((zero? n) 1 (* n (f (pred n))))) ((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3))))) (pred (pred 3))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((fn [n] ((zero? n) 1 (* n (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred n))))) (pred (pred 3))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((zero? (pred (pred 3))) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((fn [n] (n (K false) true)) (pred (pred 3))) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((pred (pred 3)) (K false) true) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) (pred 3)) (K false) true) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((fn [f x] (extract ((pred 3) (inc f) (K x)))) (K false) true) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((fn [x] (extract ((pred 3) (inc (K false)) (K x)))) true) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((extract ((pred 3) (inc (K false)) (K true))) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((fn [k] (k I)) ((pred 3) (inc (K false)) (K true))) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((pred 3) (inc (K false)) (K true)) I) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) 3) (inc (K false)) (K true)) I) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((fn [f x] (extract (3 (inc f) (K x)))) (inc (K false)) (K true)) I) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((fn [x] (extract (3 (inc (inc (K false))) (K x)))) (K true)) I) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((extract (3 (inc (inc (K false))) (K (K true)))) I) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((fn [k] (k I)) (3 (inc (inc (K false))) (K (K true)))) I) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((3 (inc (inc (K false))) (K (K true))) I) I) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((fn [f x] (f (f (f x)))) (inc (inc (K false))) (K (K true))) I) I) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((fn [x] ((inc (inc (K false))) ((inc (inc (K false))) ((inc (inc (K false))) x)))) (K (K true))) I) I) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((inc (inc (K false))) ((inc (inc (K false))) ((inc (inc (K false))) (K (K true))))) I) I) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((((fn [f] (fn [g h] (h (g f)))) (inc (K false))) ((inc (inc (K false))) ((inc (inc (K false))) (K (K true))))) I) I) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((fn [g h] (h (g (inc (K false))))) ((inc (inc (K false))) ((inc (inc (K false))) (K (K true))))) I) I) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((fn [h] (h (((inc (inc (K false))) ((inc (inc (K false))) (K (K true)))) (inc (K false))))) I) I) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((I (((inc (inc (K false))) ((inc (inc (K false))) (K (K true)))) (inc (K false)))) I) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((fn [x] x) (((inc (inc (K false))) ((inc (inc (K false))) (K (K true)))) (inc (K false)))) I) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((inc (inc (K false))) ((inc (inc (K false))) (K (K true)))) (inc (K false))) I) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((((fn [f] (fn [g h] (h (g f)))) (inc (K false))) ((inc (inc (K false))) (K (K true)))) (inc (K false))) I) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((fn [g h] (h (g (inc (K false))))) ((inc (inc (K false))) (K (K true)))) (inc (K false))) I) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((fn [h] (h (((inc (inc (K false))) (K (K true))) (inc (K false))))) (inc (K false))) I) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((inc (K false)) (((inc (inc (K false))) (K (K true))) (inc (K false)))) I) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((fn [f] (fn [g h] (h (g f)))) (K false)) (((inc (inc (K false))) (K (K true))) (inc (K false)))) I) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((fn [g h] (h (g (K false)))) (((inc (inc (K false))) (K (K true))) (inc (K false)))) I) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((fn [h] (h ((((inc (inc (K false))) (K (K true))) (inc (K false))) (K false)))) I) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((I ((((inc (inc (K false))) (K (K true))) (inc (K false))) (K false))) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((fn [x] x) ((((inc (inc (K false))) (K (K true))) (inc (K false))) (K false))) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((inc (inc (K false))) (K (K true))) (inc (K false))) (K false)) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((((fn [f] (fn [g h] (h (g f)))) (inc (K false))) (K (K true))) (inc (K false))) (K false)) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((fn [g h] (h (g (inc (K false))))) (K (K true))) (inc (K false))) (K false)) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((fn [h] (h ((K (K true)) (inc (K false))))) (inc (K false))) (K false)) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((inc (K false)) ((K (K true)) (inc (K false)))) (K false)) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((fn [f] (fn [g h] (h (g f)))) (K false)) ((K (K true)) (inc (K false)))) (K false)) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((fn [g h] (h (g (K false)))) ((K (K true)) (inc (K false)))) (K false)) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((fn [h] (h (((K (K true)) (inc (K false))) (K false)))) (K false)) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((K false) (((K (K true)) (inc (K false))) (K false))) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((fn [x] (fn [u] x)) false) (((K (K true)) (inc (K false))) (K false))) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((fn [u] false) (((K (K true)) (inc (K false))) (K false))) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (((false 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((fn [a b] b) 1 (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((fn [b] b) (* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (((* (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((fn [m n] (fn [f x] (m (n f) x))) (pred (pred 3)) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((fn [n] (fn [f x] ((pred (pred 3)) (n f) x))) (((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3))))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (((fn [f x] ((pred (pred 3)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f) x)) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f ((fn [x] ((pred (pred 3)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f) x)) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f ((pred (pred 3)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (((fn [n] (fn [f x] (extract (n (inc f) (K x))))) (pred 3)) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f ((fn [f x] (extract ((pred 3) (inc f) (K x)))) ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f ((fn [x] (extract ((pred 3) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f)) (K x)))) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (extract ((pred 3) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f)) (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))))
(fn [f x1] (f (f (f (f (f ((fn [k] (k I)) ((pred 3) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f)) (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))))
(fn [f x1] (f (f (f (f (f (((pred 3) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f)) (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) I)))))))
(fn [f x1] (f (f (f (f (f ((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) 3) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f)) (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) I)))))))
(fn [f x1] (f (f (f (f (f (((fn [f x] (extract (3 (inc f) (K x)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f)) (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) I)))))))
(fn [f x1] (f (f (f (f (f (((fn [x] (extract (3 (inc (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) (K x)))) (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) I)))))))
(fn [f x1] (f (f (f (f (f ((extract (3 (inc (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) (K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))) I)))))))
(fn [f x1] (f (f (f (f (f (((fn [k] (k I)) (3 (inc (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) (K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))) I)))))))
(fn [f x1] (f (f (f (f (f (((3 (inc (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) (K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))) I) I)))))))
(fn [f x1] (f (f (f (f (f ((((fn [f x] (f (f (f x)))) (inc (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) (K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))) I) I)))))))
(fn [f x1] (f (f (f (f (f ((((fn [x] ((inc (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) x)))) (K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))) I) I)))))))
(fn [f x1] (f (f (f (f (f ((((inc (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) (K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))))) I) I)))))))
(fn [f x1] (f (f (f (f (f (((((fn [f] (fn [g h] (h (g f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) (K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))))) I) I)))))))
(fn [f x1] (f (f (f (f (f ((((fn [g h] (h (g (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))))) ((inc (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) (K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))))) I) I)))))))
(fn [f x1] (f (f (f (f (f (((fn [h] (h (((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))))) I) I)))))))
(fn [f x1] (f (f (f (f (f ((I (((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f)))) I)))))))
(fn [f x1] (f (f (f (f (f (((fn [x] x) (((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f)))) I)))))))
(fn [f x1] (f (f (f (f (f ((((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) I)))))))
(fn [f x1] (f (f (f (f (f (((((fn [f] (fn [g h] (h (g f)))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) I)))))))
(fn [f x1] (f (f (f (f (f ((((fn [g h] (h (g (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))))) ((inc (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) (K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) I)))))))
(fn [f x1] (f (f (f (f (f (((fn [h] (h (((inc (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) (K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) I)))))))
(fn [f x1] (f (f (f (f (f (((inc ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)) (((inc (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) (K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))) I)))))))
(fn [f x1] (f (f (f (f (f ((((fn [f] (fn [g h] (h (g f)))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)) (((inc (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) (K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))) I)))))))
(fn [f x1] (f (f (f (f (f (((fn [g h] (h (g ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))) (((inc (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) (K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))) I)))))))
(fn [f x1] (f (f (f (f (f ((fn [h] (h ((((inc (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) (K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))) I)))))))
(fn [f x1] (f (f (f (f (f (I ((((inc (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) (K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((fn [x] x) ((((inc (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) (K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((inc (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) (K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (f (((((fn [f] (fn [g h] (h (g f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) (K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (f ((((fn [g h] (h (g (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))))) (K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (f (((fn [h] (h ((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))))) (inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (f (((inc ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)) ((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f)))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (f ((((fn [f] (fn [g h] (h (g f)))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)) ((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f)))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (f (((fn [g h] (h (g ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))) ((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f)))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (f ((fn [h] (h (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))) ((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f))))))))
(fn [f x1] (f (f (f (f (f (((((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred 3)))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((fact_ ((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5))))) (pred (pred (pred 3)))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((fn [f n] ((zero? n) 1 (* n (f (pred n))))) ((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5))))) (pred (pred (pred 3)))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((fn [n] ((zero? n) 1 (* n (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred n))))) (pred (pred (pred 3)))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((zero? (pred (pred (pred 3)))) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((fn [n] (n (K false) true)) (pred (pred (pred 3)))) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((pred (pred (pred 3))) (K false) true) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) (pred (pred 3))) (K false) true) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((fn [f x] (extract ((pred (pred 3)) (inc f) (K x)))) (K false) true) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((fn [x] (extract ((pred (pred 3)) (inc (K false)) (K x)))) true) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((extract ((pred (pred 3)) (inc (K false)) (K true))) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((fn [k] (k I)) ((pred (pred 3)) (inc (K false)) (K true))) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((pred (pred 3)) (inc (K false)) (K true)) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) (pred 3)) (inc (K false)) (K true)) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((fn [f x] (extract ((pred 3) (inc f) (K x)))) (inc (K false)) (K true)) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((fn [x] (extract ((pred 3) (inc (inc (K false))) (K x)))) (K true)) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((extract ((pred 3) (inc (inc (K false))) (K (K true)))) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((fn [k] (k I)) ((pred 3) (inc (inc (K false))) (K (K true)))) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((pred 3) (inc (inc (K false))) (K (K true))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((((fn [n] (fn [f x] (extract (n (inc f) (K x))))) 3) (inc (inc (K false))) (K (K true))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((fn [f x] (extract (3 (inc f) (K x)))) (inc (inc (K false))) (K (K true))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((fn [x] (extract (3 (inc (inc (inc (K false)))) (K x)))) (K (K true))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((extract (3 (inc (inc (inc (K false)))) (K (K (K true))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((fn [k] (k I)) (3 (inc (inc (inc (K false)))) (K (K (K true))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((3 (inc (inc (inc (K false)))) (K (K (K true)))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((((fn [f x] (f (f (f x)))) (inc (inc (inc (K false)))) (K (K (K true)))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((((fn [x] ((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) x)))) (K (K (K true)))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true)))))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((((fn [f] (fn [g h] (h (g f)))) (inc (inc (K false)))) ((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true)))))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((((fn [g h] (h (g (inc (inc (K false)))))) ((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true)))))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((fn [h] (h (((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false)))))) I) I) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((I (((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((fn [x] x) (((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((((inc (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false)))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((((fn [f] (fn [g h] (h (g f)))) (inc (inc (K false)))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false)))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((((fn [g h] (h (g (inc (inc (K false)))))) ((inc (inc (inc (K false)))) (K (K (K true))))) (inc (inc (K false)))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((fn [h] (h (((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))))) (inc (inc (K false)))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((inc (inc (K false))) (((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((((fn [f] (fn [g h] (h (g f)))) (inc (K false))) (((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((fn [g h] (h (g (inc (K false))))) (((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((fn [h] (h ((((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false))))) I) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((I ((((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((fn [x] x) ((((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((((inc (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((((fn [f] (fn [g h] (h (g f)))) (inc (inc (K false)))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((((fn [g h] (h (g (inc (inc (K false)))))) (K (K (K true)))) (inc (inc (K false)))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((fn [h] (h ((K (K (K true))) (inc (inc (K false)))))) (inc (inc (K false)))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((inc (inc (K false))) ((K (K (K true))) (inc (inc (K false))))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((((fn [f] (fn [g h] (h (g f)))) (inc (K false))) ((K (K (K true))) (inc (inc (K false))))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((fn [g h] (h (g (inc (K false))))) ((K (K (K true))) (inc (inc (K false))))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((fn [h] (h (((K (K (K true))) (inc (inc (K false)))) (inc (K false))))) (inc (K false))) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((inc (K false)) (((K (K (K true))) (inc (inc (K false)))) (inc (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((fn [f] (fn [g h] (h (g f)))) (K false)) (((K (K (K true))) (inc (inc (K false)))) (inc (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((fn [g h] (h (g (K false)))) (((K (K (K true))) (inc (inc (K false)))) (inc (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((fn [h] (h ((((K (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false)))) I) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((I ((((K (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false))) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((fn [x] x) ((((K (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false))) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((K (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((((fn [x] (fn [u] x)) (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((fn [u] (K (K true))) (inc (inc (K false)))) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((K (K true)) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((((fn [x] (fn [u] x)) (K true)) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((fn [u] (K true)) (inc (K false))) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((K true) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((((fn [x] (fn [u] x)) true) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((((fn [u] true) (K false)) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((true 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((fn [a b] a) 1 (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((((fn [b] 1) (* (pred (pred (pred 3))) (((fn [x5] (fact_ (x5 x5))) (fn [x5] (fact_ (x5 x5)))) (pred (pred (pred (pred 3))))))) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((1 f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (((fn [f x] (f x)) f) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f ((fn [x] (f x)) (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (f (((K (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (f ((((fn [x] (fn [u] x)) (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (f (((fn [u] (K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))) (inc ((((fn [x3] (fact_ (x3 x3))) (fn [x3] (fact_ (x3 x3)))) (pred (pred (pred 3)))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (f ((K ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (f (((fn [x] (fn [u] x)) ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (f ((fn [u] ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f))) ((((fn [x4] (fact_ (x4 x4))) (fn [x4] (fact_ (x4 x4)))) (pred (pred (pred 3)))) f)))))))))
(fn [f x1] (f (f (f (f (f (f ((K x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (f (((fn [x] (fn [u] x)) x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (f ((fn [u] x1) ((((fn [x2] (fact_ (x2 x2))) (fn [x2] (fact_ (x2 x2)))) (pred (pred 3))) f)))))))))
(fn [f x1] (f (f (f (f (f (f x1)))))))
